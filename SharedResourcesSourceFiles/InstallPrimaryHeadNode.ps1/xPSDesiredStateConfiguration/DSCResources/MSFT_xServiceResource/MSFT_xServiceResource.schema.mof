
[ClassVersion("1.0.0"),FriendlyName("xService")]
class MSFT_xServiceResource : OMI_BaseResource
{
  [key,Description("Indicates the service name. Note that sometimes this is different from the display name. You can get a list of the services and their current state with the Get-Service cmdlet.")] string Name;
  [write,Description("Ensures that the service is present or absent. Defaults to Present."),ValueMap{"Present", "Absent"},Values{"Present", "Absent"}] string Ensure;
  [write,Description("The path to the service executable file.")] string Path;
  [write,Description("Indicates the startup type for the service."),ValueMap{"Automatic", "Manual", "Disabled"},Values{"Automatic", "Manual", "Disabled"}] string StartupType;
  [write,Description("Indicates the sign-in account to use for the service."),ValueMap{"LocalSystem", "LocalService", "NetworkService"},Values{"LocalSystem", "LocalService", "NetworkService"}] string BuiltInAccount;
  [write,Description("The credential to run the service under."),EmbeddedInstance("MSFT_Credential")] string Credential;
  [Write,Description("The service can create or communicate with a window on the desktop. Must be false for services not running as LocalSystem. Defaults to False.")] boolean DesktopInteract;
  [write,Description("Indicates the state you want to ensure for the service. Defaults to Running."),ValueMap{"Running", "Stopped"},Values{"Running", "Stopped"}] string State;
  [write,Description("The display name of the service.")] string DisplayName;
  [write,Description("The description of the service.")] string Description;
  [write,Description("An array of strings indicating the names of the dependencies of the service.")] string Dependencies[];
  [write,Description("The time to wait for the service to start in milliseconds. Defaults to 30000.")] uint32 StartupTimeout;
  [write,Description("The time to wait for the service to stop in milliseconds. Defaults to 30000.")] uint32 TerminateTimeout;
  [read,Description("The current status of the service.")] string Status;
};
